trigger:
  branches:
    include:
      - main
  paths:
    include:
      - terraform-aks/**

variables:
  terraformVersion: '1.6.6'
  workingDir: 'terraform-aks'

stages:
# =====================================
# STAGE 1: Terraform Plan (CI)
# =====================================
- stage: Plan
  displayName: "Terraform Plan"
  jobs:
    - job: plan
      displayName: "Terraform Plan"
      pool:
        vmImage: 'ubuntu-latest'

      steps:
        - checkout: self

        - task: TerraformInstaller@1
          displayName: "Install Terraform"
          inputs:
            terraformVersion: $(terraformVersion)

        - task: AzureCLI@2
          displayName: "Terraform Init & Plan"
          inputs:
            azureSubscription: 'My-Azure-Service-Connection'   # ðŸ‘ˆ your service connection name
            scriptType: bash
            scriptLocation: inlineScript
            workingDirectory: $(workingDir)
            inlineScript: |
              echo "Initializing Terraform backend..."
              terraform init -input=false
              
              echo "Validating Terraform code..."
              terraform validate

              echo "Generating Terraform plan..."
              terraform plan -out=tfplan.binary -input=false
              
              terraform show -no-color tfplan.binary > tfplan.txt

        - task: PublishBuildArtifacts@1
          displayName: "Upload Terraform Plan"
          inputs:
            PathtoPublish: '$(workingDir)/tfplan.txt'
            ArtifactName: 'tfplan'

# =====================================
# STAGE 2: Terraform Apply (CD)
# =====================================
- stage: Apply
  displayName: "Terraform Apply"
  dependsOn: Plan
  condition: succeeded()
  jobs:
    - deployment: apply
      displayName: "Terraform Apply to Azure"
      environment: 'Dev'     # ðŸ‘ˆ Optional: use Approvals for UAT/Prod
      pool:
        vmImage: 'ubuntu-latest'

      strategy:
        runOnce:
          deploy:
            steps:
              - checkout: self

              - task: TerraformInstaller@1
                displayName: "Install Terraform"
                inputs:
                  terraformVersion: $(terraformVersion)

              - task: DownloadBuildArtifacts@1
                displayName: "Download Plan Artifact"
                inputs:
                  buildType: 'current'
                  downloadType: 'single'
                  artifactName: 'tfplan'
                  downloadPath: '$(workingDir)'

              - task: AzureCLI@2
                displayName: "Terraform Apply"
                inputs:
                  azureSubscription: 'My-Azure-Service-Connection'
                  scriptType: bash
                  scriptLocation: inlineScript
                  workingDirectory: $(workingDir)
                  inlineScript: |
                    echo "Applying Terraform Plan..."
                    terraform init -input=false
                    terraform apply -auto-approve tfplan.binary
