name: Terraform Infra CI/CD

on:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main
  workflow_dispatch:

permissions:
  id-token: write    # Required for OIDC login to Azure
  contents: read

env:
  TF_VERSION: 1.6.6
  WORKING_DIR: .

jobs:
  terraform:
    name: Terraform Plan/Apply
    runs-on: ubuntu-latest

    steps:
      # Step 1️ Checkout repo
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2️ Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # Step 3️ Login to Azure using OIDC (no secrets)
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Step 4️ Terraform fmt
      - name: Terraform Format Check
        run: terraform fmt -check -recursive
        working-directory: ${{ env.WORKING_DIR }}

      # Step 5️ Terraform Init
      - name: Terraform Init
        run: terraform init -input=false
        working-directory: ${{ env.WORKING_DIR }}

      # Step 6️ Terraform Validate
      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ env.WORKING_DIR }}

      # Step 7️ Terraform Plan
      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -no-color -out=tfplan.bin
        working-directory: ${{ env.WORKING_DIR }}

      # Step 8️ Upload Plan Artifact (for review)
      - name: Upload Plan
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ env.WORKING_DIR }}/tfplan.bin

      # Step 9️ Terraform Apply (only on main)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan.bin
        working-directory: ${{ env.WORKING_DIR }}
